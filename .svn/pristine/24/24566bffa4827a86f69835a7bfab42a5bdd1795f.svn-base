package com.jeeplus.modules.api;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.jeeplus.common.utils.CookieUtils;
import com.jeeplus.common.utils.StringUtils;
import com.jeeplus.core.web.BaseController;
import com.jeeplus.modules.home.utils.CommUtils;
import com.jeeplus.modules.portal.entity.RlzyCompany;
import com.jeeplus.modules.portal.entity.RlzyUser;
import com.jeeplus.modules.portal.service.RlzyCompanyService;
import com.jeeplus.modules.portal.service.RlzyUserService;


@Controller
@RequestMapping("/api")
public class ApiLoginController extends BaseController{
	  
	@Autowired
	private RlzyUserService rlzyUserService;
	@Autowired
	private RlzyCompanyService rlzyCompanyService;
	  /**
	   * 登录
	   * @return
	   */
	  @ResponseBody
	  @RequestMapping("/login")
	  public ReturnJson login(HttpServletRequest request, HttpServletResponse response,@RequestBody Map<String,String> loginmap) {
		  /*JSONObject jsonObject = JSON.parseObject(jsonData);
 		  String password= jsonObject.getString("password");*/
		  String user= loginmap.get("user");
		  String password= loginmap.get("password");
		  ReturnJson returnJson =new ReturnJson();
		  RlzyUser rlzyUser = new RlzyUser();
			rlzyUser.setPassword(password);
			if(CommUtils.isInteger(user)){
				rlzyUser.setPhone(user);
			}else{
				rlzyUser.setName(user);
			}
			RlzyUser userinfo = rlzyUserService.loginPasswordCompare(rlzyUser);
			if(userinfo ==null || userinfo.getId()==null || userinfo.getId()==""){
				RlzyCompany rlzyCompany = new RlzyCompany();
				rlzyCompany.setPassword(password);
				if(CommUtils.isInteger(user)){
					rlzyCompany.setTelephone(user);
				}else{
					rlzyCompany.setCompanyname(user);
				}
				RlzyCompany compayInfo = rlzyCompanyService.loginPasswordCompare(rlzyCompany);
				if(compayInfo ==null || compayInfo.getId()==null || compayInfo.getId()==""){
					returnJson.setMessage("用户不存在!");
			        returnJson.setStatus(false);
				}else{
					if("1".equals(compayInfo.getPaystatus())) {
						returnJson.setMessage("用户未支付!");
				        returnJson.setStatus(false);
					}else {
				        Map<String,Object> map=new HashMap<>();
				        Map<String, String> usermap=new HashMap<String, String>();
				        usermap.put("name",compayInfo.getCompanyname());
				        usermap.put("id",compayInfo.getId());
				        usermap.put("type",compayInfo.getCpflag());
				        usermap.put("pic",compayInfo.getLogo());
				        map.put("user",usermap);
						returnJson.setMessage("登录成功!");
				        String token=TokenSign.getToken(compayInfo.getCompanyname(), compayInfo.getId());
						response.setHeader("accessToken", token);
				        returnJson.setResult(map);
				        returnJson.setStatus(true);
					}
				}
			}else{
		        Map<String,Object> map=new HashMap<>();
		        Map<String, String> usermap=new HashMap<String, String>();
		        usermap.put("name",userinfo.getName());
		        usermap.put("id",userinfo.getId());
		        usermap.put("type",userinfo.getCpflag());
		        usermap.put("pic",userinfo.getPhone());
		        map.put("user",usermap);
		        String token=TokenSign.getToken(userinfo.getName(), userinfo.getId());
				response.setHeader("accessToken", token);
				returnJson.setMessage("登录成功!");
				returnJson.setStatus(true);
		        returnJson.setResult(map);
			}
		  return returnJson;
	  }
	  /**
	   * 登录退出
	   * @return
	   */
	  @RequestMapping("/quit")
	  public ReturnJson quit() {
		  
		  return null;
	  }
	  
		/**
		 * 验证码登录正确
		 * @return
		 */
		@ResponseBody
		@RequestMapping(value="loginCode")
		public ReturnJson ReturnJson(HttpServletRequest request, HttpServletResponse response,@RequestBody Map<String,String> loginmap){
			ReturnJson returnJson =new ReturnJson();
			String phone= loginmap.get("phone");
			RlzyUser rlzyUser = new RlzyUser();
			rlzyUser.setPhone(phone);
			List<RlzyUser> userList = rlzyUserService.findList(rlzyUser);
			if(userList.size() > 0) {
				//添加cookie
				 Map<String,Object> maps=new HashMap<>();
		        Map<String,String> map=new HashMap<>();
		        map.put("name",userList.get(0).getName());
		        map.put("id", userList.get(0).getId());
		        map.put("type", "1");
		        String json= JSON.toJSONString(map);    
				CookieUtils.setCookie(response,"user",json,24 * 60 * 60 * 30);
				String token=TokenSign.getToken(userList.get(0).getName(), userList.get(0).getId());
				maps.put("user",map);
				response.setHeader("accessToken", token);
				returnJson.setMessage("登录成功!");
				returnJson.setStatus(true);
		        returnJson.setResult(maps);
		        return returnJson;
			}else {
				RlzyCompany rlzyCompany = new RlzyCompany();
				rlzyCompany.setTelephone(phone);
				List<RlzyCompany> companyList = rlzyCompanyService.findList(rlzyCompany);
				if(companyList.size() > 0) {
					if("1".equals(companyList.get(0).getPaystatus())) {
						returnJson.setMessage("公司还未支付,请前去支付!");
				        returnJson.setStatus(false);
				        return returnJson;
					}else {
						//添加cookie
						 Map<String,Object> mapss=new HashMap<>();
				        Map<String,String> map=new HashMap<>();
				        map.put("name",companyList.get(0).getCompanyname());
				        map.put("id", companyList.get(0).getId());
				        map.put("type", "2");
				        String json= JSON.toJSONString(map);
						CookieUtils.setCookie(response,"user",json,24 * 60 * 60 * 30);
						mapss.put("comapany",map);
						returnJson.setMessage("登录成功!");
				        String token=TokenSign.getToken(companyList.get(0).getCompanyname(), companyList.get(0).getId());
						response.setHeader("accessToken", token);
				        returnJson.setResult(mapss);
				        returnJson.setStatus(true);
				        return returnJson;
					}
				}
			}
			returnJson.setMessage("用户不存在,请注册!");
	        returnJson.setStatus(false);
	        return returnJson;
		}
}
