package com.jeeplus.modules.home.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeeplus.modules.portal.entity.RlzyRelation;
import com.jeeplus.modules.portal.entity.RlzyResume;
import com.jeeplus.modules.portal.entity.RlzyUser;
import com.jeeplus.modules.portal.service.RlzyRelationService;
import com.jeeplus.modules.portal.service.RlzyResumeService;
import com.jeeplus.modules.portal.service.RlzyUserService;
import com.jeeplus.modules.sys.service.SysPostionService;

/**
 * person个人控制层
 * 
 * @author 胡林斐
 * @Date 2019-11-13 17:45:13
 */
@Controller
@RequestMapping("/user")
public class PersonController {

	@Autowired
	RlzyUserService rlzyUserService;
	
	@Autowired
	RlzyResumeService rlzyResumeService;
	
	@Autowired
	SysPostionService sysPostionService;
	
	@Autowired
	RlzyRelationService rlzyRelationService;
	
	/**
	 * 主表插入(修改)简历信息
	 * @param user
	 */
	@RequestMapping("/saveResume")
    public String saveResume(RlzyUser rlzyUser){
		rlzyUserService.save(rlzyUser);
		return "redirect:/user/inquiryResumeList";
	}
	
	/**
	 * 子表插入(修改)简历信息
	 * @param rlzyResume
	 * @return
	 */
	@RequestMapping("save")
    public String save(RlzyResume rlzyResume,@RequestParam(value = "userid") String id){
		int i;
		if(id!=null && id!="") {
			i = rlzyResumeService.update(rlzyResume);
		}else {
			//id = UUID.randomUUID().toString().replace("-","");
			i = rlzyResumeService.insert(rlzyResume);
		}
		if(i>0) {
			return "redirect:/user/inquiryResumeList";
		}
		return "";
    }
	
	/**
	 * 首次进入
	 * @param model
	 * @param rlzyUser
	 * @param id
	 * @return
	 */
	@RequestMapping("/personal")
	public String personal(Model model,RlzyUser rlzyUser,HttpSession session) {
		//String phone = (String)session.getAttribute("phone");
		String phone = "17395131041";
		rlzyUser.setPhone(phone);
		List<RlzyUser> rlzyUserList = rlzyUserService.findList(rlzyUser);
		if(rlzyUserList.size() > 0) {
			model.addAttribute("id",rlzyUserList.get(0).getId());
			model.addAttribute("rlzyUser",rlzyUserList.get(0));
		}
		return "modules/home/personalCenter";
	}
	/**
	 * 查询用户简历信息
	 * @param model
	 * @param rlzyUser
	 * @param id
	 * @return
	 */
	@RequestMapping("/myResume")
	public String myResume(String userId,Model model,RlzyUser rlzyUser) {
		rlzyUser=rlzyUserService.get(userId);
		model.addAttribute("rlzyUser",rlzyUser);
		model.addAttribute("rlzyResume",rlzyUser.getRlzyResumeList());
		return "modules/home/pages/myResume";
	}
	
	/**
	 * 求职管理
	 * @param model
	 * @param session
	 * @return
	 */
	@RequestMapping(value="careerManage")
	public String careerManage(String userId,Model model,HttpSession session) {
			RlzyRelation rlzyRelation = new RlzyRelation();
			rlzyRelation.setUserid(userId);
			rlzyRelation.setDeliverystate("1");
			List<RlzyRelation> relationList = rlzyRelationService.deliverList(rlzyRelation);
			if(relationList.size() > 0) {
				model.addAttribute("relationList",relationList);
			}
			rlzyRelation.setDeliverystate("2");
			List<RlzyRelation> relationLists = rlzyRelationService.deliverList(rlzyRelation);
			if(relationLists.size() > 0) {
				model.addAttribute("relationLists", relationLists);
			}
		return "/modules/home/pages/careerManage";
	}
	
	/**
	 * 求职管理-面试邀请
	 * @param relationId
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="interview")
	public String interview(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setUserdealstate("1");
		rlzyRelationService.save(rlzyRelation);
		return "";
	}
	
	/**
	 * 求职管理-接受按钮
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="accept")
	public String accept(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setUserdealstate("1");
		rlzyRelationService.save(rlzyRelation);
		return "1";
	}
	
	/**
	 * 求职管理-拒绝按钮
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="refuse")
	public String refuse(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setUserdealstate("2");
		rlzyRelationService.save(rlzyRelation);
		return "1";
	}
	
	/**
	 * 职位收藏夹
	 * @param model
	 * @param request
	 * @return
	 */
	@RequestMapping(value="jobCollect")
	public String jobCollect(String userId,Model model,HttpServletRequest request) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		List<RlzyRelation> relationList = rlzyRelationService.findList(rlzyRelation);
		model.addAttribute("jobCollectList", relationList);
		return "/modules/home/pages/jobCollect";
	}
	
	/**
	 * 职位收藏夹-收藏
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="collect")
	public String collect(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setCollectionstate("1");
		rlzyRelationService.save(rlzyRelation);
		return "1";
	}
	
	/**
	 * 职位收藏夹-取消
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="cancel")
	public String cancel(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setCollectionstate("2");
		rlzyRelationService.save(rlzyRelation);
		return "1";
	}
	

}
