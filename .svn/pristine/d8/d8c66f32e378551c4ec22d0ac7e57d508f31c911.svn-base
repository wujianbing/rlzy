package com.jeeplus.modules.home.web;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeeplus.modules.portal.entity.RlzyRelation;
import com.jeeplus.modules.portal.entity.RlzyUser;
import com.jeeplus.modules.portal.service.RlzyRelationService;
import com.jeeplus.modules.portal.service.RlzyUserService;
import com.jeeplus.modules.sys.entity.SysPostion;
import com.jeeplus.modules.sys.service.SysPostionService;

/**
 * person个人控制层
 * 
 * @author 胡林斐
 * @Date 2019-11-13 17:45:13
 */
@Controller
@RequestMapping("/user")
public class PersonController {

	@Autowired
	RlzyUserService rlzyUserService;
	
	@Autowired
	SysPostionService sysPostionService;
	
	@Autowired
	RlzyRelationService rlzyRelationService;
	
	/**
	 * 插入简历信息
	 * @param user
	 */
	@RequestMapping("/saveResume")
    public void saveResume(RlzyUser rlzyUser){
		rlzyUserService.save(rlzyUser);
	}
	
	/**
	 * 根据手机号查询用户信息
	 * @param model
	 * @param rlzyUser
	 * @param id
	 * @return
	 */
	@RequestMapping("/inquiryResumeList")
	public String inquiryResumeList(Model model,RlzyUser rlzyUser,HttpSession session) {
		//String phone = (String)session.getAttribute("phone");
		String phone = "17395131041";
		rlzyUser.setPhone(phone);
		List<RlzyUser> rlzyUserList = rlzyUserService.findList(rlzyUser);
		model.addAttribute("rlzyUser",rlzyUserList.get(0));
		model.addAttribute("id", rlzyUserList.get(0).getId());
		return "modules/home/myFind";
	}
	
	@RequestMapping("/inquiryPosition")
	public String inquiryPosition(Model model,SysPostion sysPostion) {
		List<SysPostion> slist = sysPostionService.findList(sysPostion);
		model.addAttribute("slist",slist);
		return "modules/home/registeredOne";
	}
	
	/**
	 * 求职管理
	 * @param model
	 * @param session
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="careerManage")
	public String careerManage(Model model,HttpSession session) {
		String phone = (String)session.getAttribute("tel");
		RlzyUser rlzyUser = new RlzyUser();
		rlzyUser.setPhone(phone);
		List<RlzyUser> userList = rlzyUserService.findList(rlzyUser);
		if(userList.size() > 0) {
			RlzyRelation rlzyRelation = new RlzyRelation();
			rlzyRelation.setId(userList.get(0).getId());
			List<RlzyRelation> relationList = rlzyRelationService.findList(rlzyRelation);
			List<RlzyRelation> list = new ArrayList<RlzyRelation>();
			List<RlzyRelation> list2 = new ArrayList<RlzyRelation>();
			if(relationList.size() > 0) {
				for(int i=0;i<relationList.size();i++){
					//面试邀请
					if(!"1".equals(relationList.get(i).getDeliverystate())) {
						list.add(relationList.get(i));
					//申请记录
					}else { 
						list2.add(relationList.get(i));
					}
				}
				model.addAttribute("companydeal", list);
				model.addAttribute("userdeal", list2);
			}
		}
		return "" ;
	}
	
	/**
	 * 求职管理-接受按钮
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="accept")
	public String accept(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setUserdealstate("1");
		rlzyRelationService.save(rlzyRelation);
		return "";
	}
	
	/**
	 * 求职管理-拒绝按钮
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="refuse")
	public String refuse(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setUserdealstate("2");
		rlzyRelationService.save(rlzyRelation);
		return "";
	}
	
	/**
	 * 职位收藏夹
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="jobCollect")
	public String jobCollect(String id,Model model,HttpServletRequest request) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setId(id);
		List<RlzyRelation> relationList = rlzyRelationService.findList(rlzyRelation);
		model.addAttribute("relation", relationList);
		return "";
	}
	
	/**
	 * 职位收藏夹-收藏
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="collect")
	public String collect(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setCollectionstate("1");
		rlzyRelationService.save(rlzyRelation);
		return "";
	}
	
	/**
	 * 职位收藏夹-取消
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="cancel")
	public String cancel(String relationId) {
		RlzyRelation rlzyRelation = rlzyRelationService.get(relationId);
		rlzyRelation.setCollectionstate("2");
		rlzyRelationService.save(rlzyRelation);
		return "";
	}
}
