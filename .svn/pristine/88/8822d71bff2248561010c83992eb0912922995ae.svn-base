package com.jeeplus.modules.home.web;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeeplus.core.persistence.Page;
import com.jeeplus.modules.portal.entity.RlzyCompany;
import com.jeeplus.modules.portal.entity.RlzyPosition;
import com.jeeplus.modules.portal.entity.RlzyRelation;
import com.jeeplus.modules.portal.entity.RlzyUser;
import com.jeeplus.modules.portal.service.RlzyCompanyService;
import com.jeeplus.modules.portal.service.RlzyPositionService;
import com.jeeplus.modules.portal.service.RlzyRelationService;
import com.jeeplus.modules.portal.service.RlzyUserService;
import com.jeeplus.modules.sys.entity.DictValue;
import com.jeeplus.modules.sys.utils.DictUtils;

/**
 * Position投递简历控制层
 * 
 * @author 胡林斐
 * @Date 2019-11-21 14:46:34    
 */
@Controller
@RequestMapping("/position")
public class PositionController {
	
	@Autowired
	RlzyUserService rlzyUserService;
	
	@Autowired
	RlzyCompanyService rlzyCompanyService;
	
	@Autowired
	RlzyPositionService rlzyPositionService;
	
	@Autowired
	RlzyRelationService rlzyRelationService;

	/**
	 * 职位展示页面
	 * @param model
	 * @param rlzyPosition
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/positionList")
	public String PositionList(String positionid,Model model,RlzyUser rlzyUser,RlzyPosition rlzyPosition,HttpServletRequest request,HttpServletResponse response) {
		//String phone = (String)session.getAttribute("phone");
		String phone = "13615693261";
		rlzyUser.setPhone(phone);
		List<RlzyUser> rlzyUserList = rlzyUserService.findList(rlzyUser);
		if(rlzyUserList.size() > 0) {
			model.addAttribute("userid",rlzyUserList.get(0).getId());
		}
		Page<RlzyPosition> page = new Page<>();
		page.setPageNo(1);
		page.setPageSize(10);
		rlzyPosition.setIspost("1");
		Page<RlzyPosition> rlzyPositionList = rlzyPositionService.findPages(page, rlzyPosition);
		model.addAttribute("rlzyPositionList", rlzyPositionList.getList());
		model.addAttribute("count",rlzyPositionList.getCount());
		rlzyPosition.setIspost("0");
		Page<RlzyPosition> rlzyPositionList1 = rlzyPositionService.findPages(page, rlzyPosition);
		model.addAttribute("rlzyPositionList1", rlzyPositionList1.getList());
		model.addAttribute("count1",rlzyPositionList1.getCount());
		List<RlzyPosition> findDescList = rlzyPositionService.findDescList(rlzyPosition);
		model.addAttribute("findDescList",findDescList);
		List<DictValue> salarys = DictUtils.getDictList("salary");
		List<DictValue> industry = DictUtils.getDictList("desired_industry");
		List<DictValue> scale = DictUtils.getDictList("company_scale");
		List<DictValue> nature = DictUtils.getDictList("work_nature");
		List<DictValue> education = DictUtils.getDictList("education");
		List<DictValue> createDate = DictUtils.getDictList("u_time");
		model.addAttribute("salarys", salarys);
		model.addAttribute("industry",industry);
		model.addAttribute("scale",scale);
		model.addAttribute("nature",nature);
		model.addAttribute("education",education);
		model.addAttribute("createDate",createDate);
		return "modules/home/findInfo";
	}
	
	/**
	 * 根据页码显示职位
	 * @param id
	 * @param page
	 * @param pageSize
	 * @return
	 */
	@ResponseBody
	@RequestMapping("pageList")
	public List<RlzyPosition> pageList(String id,String page,String pageSize){
		RlzyPosition rlzyPosition = new RlzyPosition();
		Page<RlzyPosition> pages = new Page<>();
		pages.setPageNo(Integer.parseInt(page));
		pages.setPageSize(Integer.parseInt(pageSize));
		Page<RlzyPosition> positionList = rlzyPositionService.findPages(pages, rlzyPosition);
		return positionList.getList();
	}
	
	/**
	 * 职位详情页面
	 * @param model
	 * @param id
	 * @param userid
	 * @return
	 */
	@RequestMapping("positionDetails")
	public String PositionDetails(Model model,String id,String userid) {
		RlzyPosition rlzyPositions = rlzyPositionService.get(id);
		RlzyCompany rlzyCompanys = rlzyCompanyService.get(rlzyPositions.getCompanyid());
		if(rlzyPositions != null && rlzyPositions.getWelfaretype() != null && rlzyPositions.getWelfaretype() != "") {
			String[] arr = rlzyPositions.getWelfaretype().split("\\,");
			model.addAttribute("arr",arr);
		}
		model.addAttribute("userid",userid);
		model.addAttribute("rlzyPosition", rlzyPositions);
		model.addAttribute("rlzyCompany", rlzyCompanys);
		return "modules/home/findHuman";
	}
	
	/**
	 * 申请职位
	 * @param userid
	 * @param companyid
	 * @param positionid
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/applyPosition")
	public String applyPosition(String userid,@RequestParam String companyid,String positionid) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userid);
		rlzyRelation.setPositionid(positionid);
		rlzyRelation.setCompanyid(companyid);
		rlzyRelation.setInvite("2");
		rlzyRelation.setUsername(rlzyUserService.get(userid).getName());
		rlzyRelation.setPositionname(rlzyPositionService.get(positionid).getPositionname());
		rlzyRelation.setAge(rlzyUserService.get(userid).getAge());
		rlzyRelation.setSex(rlzyUserService.get(userid).getSex());
		rlzyRelation.setWorkingage(rlzyUserService.get(userid).getWorkingage());
		rlzyRelation.setDeliverystate("1");
		rlzyRelation.setCurrentstate(rlzyUserService.get(userid).getCurrentstate());
		rlzyRelationService.save(rlzyRelation);
		return "1";
	}
	
	/**
	 * 收藏职位
	 * @param userid
	 * @param companyid
	 * @param positionid
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/keepPosition")
	public String keepPosition(String userid,String companyid,String positionid) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userid);
		rlzyRelation.setPositionid(positionid);
		rlzyRelation.setCompanyid(companyid);
		rlzyRelation.setCollectionstate("1");
		rlzyRelation.setPositionname(rlzyPositionService.get(positionid).getPositionname());
		rlzyRelation.setCompanyname(rlzyCompanyService.get(companyid).getCompanyname());
		rlzyRelation.setWorkingplace(rlzyPositionService.get(positionid).getWorkingplace());
		rlzyRelation.setSalary(rlzyPositionService.get(positionid).getSalaryrange());
		rlzyRelationService.save(rlzyRelation);
		return "1";
	}
	
	/**
	 * 条件查询职位
	 * @param rlzyPosition
	 * @param model
	 * @param request
	 * @param response
	 * @param page
	 * @param pageSize
	 * @return
	 */
	@RequestMapping("positionListBySelect")
	@ResponseBody
	public List<RlzyPosition> positionListBySelect(@RequestBody RlzyPosition rlzyPosition,Model model,HttpServletRequest request,HttpServletResponse response,@RequestParam(value="page") String page,@RequestParam(value="pageSize") String pageSize){
		Page<RlzyPosition> pages = new Page<RlzyPosition>();
		pages.setPageNo(Integer.parseInt(page));
		pages.setPageSize(Integer.parseInt(pageSize));
		Page<RlzyPosition> List = rlzyPositionService.findPositionPages(pages,rlzyPosition);
		List<RlzyPosition> list = new ArrayList<RlzyPosition>(); 
		for(RlzyPosition position : List.getList()){
			position.setSalaryrange(DictUtils.getDictLabel(position.getSalaryrange(),"salary",""));
			position.setIndustry(DictUtils.getDictLabel(position.getIndustry(),"desired_industry",""));
			position.setCompanyscale(DictUtils.getDictLabel(position.getCompanyscale(),"company_scale",""));
			position.setPositiontype(DictUtils.getDictLabel(position.getPositiontype(),"work_nature",""));
			position.setEducation(DictUtils.getDictLabel(position.getEducation(),"education",""));
			list.add(position);
		}
		return list;
	}
	
}
