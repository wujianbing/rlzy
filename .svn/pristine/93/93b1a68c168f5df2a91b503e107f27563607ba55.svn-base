package com.jeeplus.modules.home.web;

import java.text.SimpleDateFormat;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeeplus.modules.portal.entity.RlzyRelation;
import com.jeeplus.modules.portal.entity.RlzyResume;
import com.jeeplus.modules.portal.entity.RlzyUser;
import com.jeeplus.modules.portal.service.RlzyRelationService;
import com.jeeplus.modules.portal.service.RlzyResumeService;
import com.jeeplus.modules.portal.service.RlzyUserService;
import com.jeeplus.modules.sys.utils.DictUtils;

/**
 * person个人控制层
 * 
 * @author 胡林斐
 * @Date 2019-11-13 17:45:13
 */
@Controller
@RequestMapping("/user")
public class PersonController {

	@Autowired
	RlzyUserService rlzyUserService;
	
	@Autowired
	RlzyResumeService rlzyResumeService;
	
	@Autowired
	RlzyRelationService rlzyRelationService;
	
	/**
	 * 首次进入
	 * @param model
	 * @param rlzyUser
	 * @param id
	 * @return
	 */
	@RequestMapping("/personal")
	public String personal(Model model,RlzyUser rlzyUser,HttpSession session) {
		//String phone = (String)session.getAttribute("phone");
		String phone = "13895686523";
		rlzyUser.setPhone(phone);
		List<RlzyUser> rlzyUserList = rlzyUserService.findList(rlzyUser);
		if(rlzyUserList.size() > 0) {
			model.addAttribute("id",rlzyUserList.get(0).getId());
			model.addAttribute("rlzyUser",rlzyUserList.get(0));
		}
		return "modules/home/personalCenter";
	}
	
	/**
	 * 查询用户简历信息
	 * @param model
	 * @param rlzyUser
	 * @param id
	 * @return
	 */
	@RequestMapping("/myResume")
	public String myResume(String userId,Model model,RlzyUser rlzyUser,RlzyResume rlzyResume) {
		RlzyUser rlzyUsers = new RlzyUser();
		rlzyUsers.setId(userId);
		List<RlzyUser> rlzyUserList = rlzyUserService.findList(rlzyUsers);
		List<RlzyResume> rlzyResumeList = rlzyResumeService.findList(rlzyResume);
		model.addAttribute("rlzyUser",rlzyUserList.get(0));
		model.addAttribute("rlzyResumeList",rlzyResumeList);
		return "modules/home/pages/myResume";
	}
	
	/**
	 * 主表插入(修改)简历信息
	 * @param user
	 */
	@RequestMapping("/saveUserInfo")
    public String saveUserInfo(String userId,RlzyUser rlzyUser) {
		RlzyUser rlzyUsers = new RlzyUser();
		rlzyUsers.setId(userId);
		List<RlzyUser> rlzyUserList = rlzyUserService.findList(rlzyUsers);
		rlzyUserList.get(0).setName(rlzyUser.getName());
		rlzyUserList.get(0).setSex(rlzyUser.getSex());
		rlzyUserList.get(0).setAge(rlzyUser.getAge());
		rlzyUserList.get(0).setIsmatch(rlzyUser.getIsmatch());
		rlzyUserList.get(0).setEducation(rlzyUser.getEducation());
		rlzyUserList.get(0).setWorkingage(rlzyUser.getWorkingage());
		rlzyUserList.get(0).setLiveplace(rlzyUser.getLiveplace());
		rlzyUserList.get(0).setNativeplace(rlzyUser.getNativeplace());
		rlzyUserList.get(0).setQq(rlzyUser.getQq());
		rlzyUserList.get(0).setWebchat(rlzyUser.getWebchat());
		rlzyUserList.get(0).setPhone(rlzyUser.getPhone());
		rlzyUserList.get(0).setCurrentstate(rlzyUser.getCurrentstate());
		rlzyUserList.get(0).setWorknature(rlzyUser.getWorknature());
		rlzyUserList.get(0).setWorkplace(rlzyUser.getWorkplace());
		rlzyUserList.get(0).setDesiredindustry(rlzyUser.getDesiredindustry());
		rlzyUserList.get(0).setDesiredposition(rlzyUser.getDesiredposition());
		rlzyUserList.get(0).setSalary(rlzyUser.getSalary());
		rlzyUserList.get(0).setSelfdescription(rlzyUser.getSelfdescription());
		rlzyUserService.save(rlzyUserList.get(0));
		return "redirect:/user/myResume?userId="+userId;
	}
	
	/**
	 * 子表插入(修改)简历信息
	 * @param rlzyResume
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/saveResume")
    public String saveResume(String userId,RlzyResume rlzyResume){
		String id = "";
		if(rlzyResume.getId() == "" || rlzyResume.getId() == null) {
			rlzyResume.setUserid(userId);
			rlzyResumeService.save(rlzyResume);
			id = rlzyResume.getId();
			System.out.println(id);
			return id;
		}
		RlzyResume rlzyResumes = new RlzyResume();
		rlzyResumes.setId(rlzyResume.getId());
		List<RlzyResume> rlzyResumeList = rlzyResumeService.findList(rlzyResumes);
		rlzyResumeList.get(0).setName(rlzyResume.getName());
		rlzyResumeService.save(rlzyResumeList.get(0));
		id=rlzyResumeList.get(0).getId(); 
		return id;
    }
	
	/**
	 * 子表修改简历信息
	 * @param rlzyResume
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/updateResume")
    public RlzyResume updateResume(String id){
		RlzyResume rlzyResumes = rlzyResumeService.get(id);
		return rlzyResumes;
    }
	
	/**
	 * 子表删除简历信息
	 * @param rlzyResume
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/deleteResume")
    public String deleteResume(String id,String userId){
		rlzyResumeService.delete(id);
		return "redirect:/user/myResume?userId="+userId;
    }
	
	/**
	 * 求职管理
	 * @param model
	 * @param session
	 * @return
	 */
	@RequestMapping(value="careerManage")
	public String careerManage(String userId,Model model,HttpSession session) {
			model.addAttribute("userId", userId);
		return "/modules/home/pages/careerManage";
	}
	
	/**
	 * 求职管理-面试邀请
	 * @param relationId
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="interview")
	public String interview(String userId) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		rlzyRelation.setDeliverystate("1");
		List<RlzyRelation> relationList = rlzyRelationService.deliverList(rlzyRelation);
		
		if(relationList.size() > 0) {
			StringBuffer jsonStr = new StringBuffer();
			jsonStr.append("{\"code\":\"0\",");
			jsonStr.append("\"msg\":\"0\",");
			jsonStr.append("\"count\":\""+relationList.size()+"\",");
			jsonStr.append("\"data\":[");
			for(int i=0;i<relationList.size();i++) {
				if(relationList.size()-i==1) {
					SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					String dates = formatter.format(relationList.get(i).getUpdateDate());
					jsonStr.append("{\"id\":\""+i+"\",");
					jsonStr.append("\"positionname\":\""+relationList.get(i).getPositionname()+"\",");
					jsonStr.append("\"companyname\":\""+relationList.get(i).getCompanyname()+"\",");
					jsonStr.append("\"workingplace\":\""+relationList.get(i).getWorkingplace()+"\",");
					jsonStr.append("\"salary\":\""+DictUtils.getDictLabel(relationList.get(i).getSalary(), "salary","")+"\",");
					jsonStr.append("\"updateDate\":\""+dates+"\"");
					jsonStr.append("}");
				}else {
					SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					String date = formatter.format(relationList.get(i).getUpdateDate());
					jsonStr.append("{\"id\":\""+i+"\",");
					jsonStr.append("\"positionname\":\""+relationList.get(i).getPositionname()+"\",");
					jsonStr.append("\"companyname\":\""+relationList.get(i).getCompanyname()+"\",");
					jsonStr.append("\"workingplace\":\""+relationList.get(i).getWorkingplace()+"\",");
					jsonStr.append("\"salary\":\""+DictUtils.getDictLabel(relationList.get(i).getSalary(), "salary","")+"\",");
					jsonStr.append("\"updateDate\":\""+date+"\"");
					jsonStr.append("},");
				}
			}
			jsonStr.append("]}");
			return jsonStr.toString();
		}
		return null;
	}
	
	/**
	 * 求职管理-申请记录
	 * @param relationId
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="applyFor")
	public String applyFor(String userId) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		rlzyRelation.setDeliverystate("2");
		List<RlzyRelation> relationLists = rlzyRelationService.deliverList(rlzyRelation);
		if(relationLists.size() > 0) {
			StringBuffer jsonStr = new StringBuffer();
			jsonStr.append("{\"code\":\"0\",");
			jsonStr.append("\"msg\":\"0\",");
			jsonStr.append("\"count\":\""+relationLists.size()+"\",");
			jsonStr.append("\"data\":[");
			for(int i=0;i<relationLists.size();i++) {
				if(relationLists.size()-i==1) {
					SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					String dates = formatter.format(relationLists.get(i).getUpdateDate());
					jsonStr.append("{\"id\":\""+i+"\",");
					jsonStr.append("\"positionname\":\""+relationLists.get(i).getPositionname()+"\",");
					jsonStr.append("\"companyname\":\""+relationLists.get(i).getCompanyname()+"\",");
					jsonStr.append("\"workingplace\":\""+relationLists.get(i).getWorkingplace()+"\",");
					jsonStr.append("\"salary\":\""+DictUtils.getDictLabel(relationLists.get(i).getSalary(), "salary","")+"\",");
					jsonStr.append("\"updateDate\":\""+dates+"\",");
					jsonStr.append("\"userdealstate\":\""+DictUtils.getDictLabel(relationLists.get(i).getUserdealstate(), "userdealstate","")+"\"");
					jsonStr.append("}");
				}else {
					SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					String date = formatter.format(relationLists.get(i).getUpdateDate());
					jsonStr.append("{\"id\":\""+i+"\",");
					jsonStr.append("\"positionname\":\""+relationLists.get(i).getPositionname()+"\",");
					jsonStr.append("\"companyname\":\""+relationLists.get(i).getCompanyname()+"\",");
					jsonStr.append("\"workingplace\":\""+relationLists.get(i).getWorkingplace()+"\",");
					jsonStr.append("\"salary\":\""+DictUtils.getDictLabel(relationLists.get(i).getSalary(), "salary","")+"\",");
					jsonStr.append("\"updateDate\":\""+date+"\",");
					jsonStr.append("\"userdealstate\":\""+DictUtils.getDictLabel(relationLists.get(i).getUserdealstate(), "userdealstate","")+"\"");
					jsonStr.append("},");
				}
			}
			jsonStr.append("]}");
			return jsonStr.toString();
		}
		return null;
	}
	
	/**
	 * 求职管理-接受按钮
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="accept")
	public void accept(String userId) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		List<RlzyRelation> rlzyRelationList = rlzyRelationService.findList(rlzyRelation);
		rlzyRelationList.get(0).setUserdealstate("1");
		rlzyRelationService.save(rlzyRelationList.get(0));
	}
	
	/**
	 * 求职管理-拒绝按钮
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="refuse")
	public void refuse(String userId) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		List<RlzyRelation> rlzyRelationList = rlzyRelationService.findList(rlzyRelation);
		rlzyRelationList.get(0).setUserdealstate("2");
		rlzyRelationService.save(rlzyRelationList.get(0));
	}
	
	/**
	 * 职位收藏夹
	 * @param model
	 * @param request
	 * @return
	 */
	@RequestMapping(value="jobCollect")
	public String jobCollect(String userId,Model model,HttpServletRequest request) {
		model.addAttribute("userId", userId);
		return "/modules/home/pages/jobCollect";
	}
	
	/**
	 * 职位收藏夹-数据接口
	 * @param model
	 * @param request
	 * @return
	 */
	@RequestMapping(value="collectData")
	public String collectData(String userId,Model model,HttpServletRequest request) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		rlzyRelation.setCollectionstate("1");
		List<RlzyRelation> relationList = rlzyRelationService.collectList(rlzyRelation);
		if(relationList.size() > 0) {
			StringBuffer jsonStr = new StringBuffer();
			jsonStr.append("{\"code\":\"0\",");
			jsonStr.append("\"msg\":\"0\",");
			jsonStr.append("\"count\":\""+relationList.size()+"\",");
			jsonStr.append("\"data\":[");
			for(int i=0;i<relationList.size();i++) {
				if(relationList.size()-i==1) {
					SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					String dates = formatter.format(relationList.get(i).getUpdateDate());
					jsonStr.append("{\"id\":\""+i+"\",");
					jsonStr.append("\"positionname\":\""+relationList.get(i).getPositionname()+"\",");
					jsonStr.append("\"companyname\":\""+relationList.get(i).getCompanyname()+"\",");
					jsonStr.append("\"workingplace\":\""+relationList.get(i).getWorkingplace()+"\",");
					jsonStr.append("\"salary\":\""+relationList.get(i).getSalary()+"\",");
					jsonStr.append("\"updateDate\":\""+dates+"\"");
					jsonStr.append("}");
				}else {
					SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					String date = formatter.format(relationList.get(i).getUpdateDate());
					jsonStr.append("{\"id\":\""+i+"\",");
					jsonStr.append("\"positionname\":\""+relationList.get(i).getPositionname()+"\",");
					jsonStr.append("\"companyname\":\""+relationList.get(i).getCompanyname()+"\",");
					jsonStr.append("\"workingplace\":\""+relationList.get(i).getWorkingplace()+"\",");
					jsonStr.append("\"salary\":\""+relationList.get(i).getSalary()+"\",");
					jsonStr.append("\"updateDate\":\""+date+"\"");
					jsonStr.append("},");
				}
			}
			jsonStr.append("]}");
			return jsonStr.toString();
		}
		return null;
	}
	
	/**
	 * 职位收藏夹-收藏
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="collect")
	public void collect(String userId) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		List<RlzyRelation> rlzyRelationList = rlzyRelationService.findList(rlzyRelation);
		rlzyRelationList.get(0).setCollectionstate("1");
		rlzyRelationService.save(rlzyRelationList.get(0));
	}
	
	/**
	 * 职位收藏夹-取消
	 * @param model
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="cancel")
	public void cancel(String userId) {
		RlzyRelation rlzyRelation = new RlzyRelation();
		rlzyRelation.setUserid(userId);
		List<RlzyRelation> rlzyRelationList = rlzyRelationService.findList(rlzyRelation);
		rlzyRelationList.get(0).setCollectionstate("2");
		rlzyRelationService.save(rlzyRelationList.get(0));
	}
}
